
二叉树：

结构描述：
Class Node {
	V value;
	Node left;
	Node right;
}

二叉树的先序、中序、后序遍历

先序：任何子树的处理顺序都是，先头节点、再左子树、然后右子树
中序：任何子树的处理顺序都是，先左子树、再头节点、然后右子树
后序：任何子树的处理顺序都是，先左子树、再右子树、然后头节点


递归方式实现二叉树的先序、中序、后序遍历
1）理解递归序
2）先序、中序、后序都可以在递归序的基础上加工出来
3）第一次到达一个节点就打印就是先序、第二次打印即中序、第三次即后序

非递归方式实现二叉树的先序、中序、后序遍历
1）任何递归函数都可以改成非递归
2）自己设计压栈的来实现


先序遍历和后序遍历，x 的左半部分，和右半部分的交集是x的祖先节点



